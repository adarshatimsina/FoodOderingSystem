/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Client;

import Shared.FOSInterface;
import Shared.MenuItem;
import java.util.List;
import javax.swing.JOptionPane;
import java.rmi.Naming;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author User
 */
public class OrderPage extends javax.swing.JFrame {

    /**
     * Creates new form OrderPage
     */
    private double totalAmount = 0.0;  
    public OrderPage() {
        initComponents();
        populateComboBox();
        
        jSlider1.addChangeListener(e -> {
        int quantity = jSlider1.getValue();
        quantityInSlider.setText(String.valueOf(quantity)); // Update label with the slider value
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        quantityInSlider = new javax.swing.JLabel();
        addToOrderList = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        confirmOrderButton = new javax.swing.JButton();
        inTotalLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("ORDER PAGE");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Food Item");

        jSlider1.setMaximum(20);

        jLabel3.setText("Quantity: ");

        quantityInSlider.setText("jLabel4");

        addToOrderList.setText("ADD");
        addToOrderList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToOrderListActionPerformed(evt);
            }
        });

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Price", "Quantity", "Total Price"
            }
        ));
        jScrollPane1.setViewportView(orderTable);

        confirmOrderButton.setText("Confirm Order");
        confirmOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmOrderButtonActionPerformed(evt);
            }
        });

        inTotalLabel.setText("In Total : xxxx");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(addToOrderList))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantityInSlider))
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(confirmOrderButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(inTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(quantityInSlider))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addToOrderList)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inTotalLabel)
                .addGap(19, 19, 19)
                .addComponent(confirmOrderButton)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addToOrderListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToOrderListActionPerformed
        // TODO add your handling code here:
     String selectedItem = (String) jComboBox1.getSelectedItem();
    int quantity = jSlider1.getValue();
    
    try {
        // Lookup the remote object from the RMI registry
        FOSInterface fosInterface = (FOSInterface) Naming.lookup("rmi://localhost/FOSService");
        
        // Retrieve the menu items and find the selected item
        List<MenuItem> menuItems = fosInterface.getMenuItems();
        MenuItem selectedMenuItem = null;
        
        for (MenuItem item : menuItems) {
            if (item.getFoodName().equals(selectedItem)) {
                selectedMenuItem = item;
                break;
            }
        }
        
        if (selectedMenuItem != null) {
            double price = selectedMenuItem.getFoodPrice(); // Correctly getting the price
            double totalPrice = price * quantity;

            // Add to the order table
            DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
            model.addRow(new Object[]{selectedMenuItem.getFoodName(), price, quantity, totalPrice});
            
            // Update total amount
            totalAmount += totalPrice; // Update the total amount
            inTotalLabel.setText("In Total: " + totalAmount); // Display the updated total
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error adding item to order.");
    }
         
    }//GEN-LAST:event_addToOrderListActionPerformed

    private void confirmOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmOrderButtonActionPerformed
        // TODO add your handling code here:
    String userId = ClientLoginPage.governmentId; // Retrieve the Government ID
    if (userId == null || userId.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please log in to place an order.");
        return;
    }

    try {
        // Lookup the remote object from the RMI registry
        FOSInterface fosInterface = (FOSInterface) Naming.lookup("rmi://localhost/FOSService");

        // Insert the order into the Orders table and get the generated OrderID
        int orderId = fosInterface.createOrder(totalAmount, userId);

        // Get the order items from the order table
        DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            String foodName = (String) model.getValueAt(i, 0);
            int quantity = (int) model.getValueAt(i, 2);
            // Assuming you have a method to get FoodID by name
            int foodId = fosInterface.getFoodIDByName(foodName); 
            
            // Insert each item into the OrderItems table
            fosInterface.addOrderItem(orderId, foodId, quantity);
        }

        // Show success message
        JOptionPane.showMessageDialog(this, "Order confirmed! Total: " + totalAmount);
        
        // Optionally, clear the order table and reset totalAmount
        model.setRowCount(0); // Clear order table
        totalAmount = 0.0; // Reset total amount
        inTotalLabel.setText("In Total: xxxx"); // Reset total label
        
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error confirming order.");
    }
    
    }//GEN-LAST:event_confirmOrderButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderPage().setVisible(true);
            }
        });
    }
    
    private void populateComboBox() {
        try {
            // Lookup the remote object from the RMI registry
            FOSInterface fosInterface = (FOSInterface) Naming.lookup("rmi://localhost/FOSService");
            
            // Retrieve menu items from the server
            List<MenuItem> menuItems = fosInterface.getMenuItems();
            
            // Clear existing items in the combo box
            jComboBox1.removeAllItems();
            
            // Add each item to the combo box
            for (MenuItem item : menuItems) {
                jComboBox1.addItem(item.getFoodName()); // Assuming you only need the food name for display
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching menu items from server.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToOrderList;
    private javax.swing.JButton confirmOrderButton;
    private javax.swing.JLabel inTotalLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable orderTable;
    private javax.swing.JLabel quantityInSlider;
    // End of variables declaration//GEN-END:variables
}
